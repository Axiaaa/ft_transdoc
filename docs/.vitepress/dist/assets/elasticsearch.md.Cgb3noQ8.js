import{_ as a,c as e,ae as i,o as t}from"./chunks/framework.Dp8IdPkr.js";const k=JSON.parse('{"title":"Elasticsearch","description":"","frontmatter":{},"headers":[],"relativePath":"elasticsearch.md","filePath":"elasticsearch.md"}'),c={name:"elasticsearch.md"};function l(r,s,h,n,o,p){return t(),e("div",null,s[0]||(s[0]=[i('<h1 id="elasticsearch" tabindex="-1">Elasticsearch <a class="header-anchor" href="#elasticsearch" aria-label="Permalink to &quot;Elasticsearch&quot;">â€‹</a></h1><p>Elasticsearch is a distributed, RESTful search and analytics engine capable of solving a growing number of use cases. It is a part of the ELK stack and is used to store and search data. In our project, Elasticsearch is used to store logs and metrics data.</p><p>It can be accessed through a REST API, and it is capable of performing full-text search, aggregations, and more. Elasticsearch is built on top of Lucene, a high-performance, full-featured information retrieval library.</p><p>Here&#39;s a request example to get all the indices in Elasticsearch:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GET</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;localhost:9200/_cat/indices?v&quot;</span></span></code></pre></div><p>In our case, we use SSL to secure the communication between the services. So we need to provide the certificates and keys to Elasticsearch.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GET</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://localhost:9200/_cat/indices?v&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cacert</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> certs/ca/ca.crt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cert</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> certs/es/es.crt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> certs/es/es.key</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Replace <code>localhost</code> with the hostname of the Elasticsearch service in your docker-compose file.</p></div>',8)]))}const u=a(c,[["render",l]]);export{k as __pageData,u as default};
