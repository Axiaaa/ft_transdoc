import{_ as i,c as a,ae as n,o as t}from"./chunks/framework.Dp8IdPkr.js";const e="/ft_transdoc/assets/shema_elk.XFejsjkB.png",F=JSON.parse('{"title":"ELK Stack","description":"","frontmatter":{},"headers":[],"relativePath":"elk-stack.md","filePath":"elk-stack.md"}'),l={name:"elk-stack.md"};function p(h,s,o,r,k,c){return t(),a("div",null,s[0]||(s[0]=[n('<h1 id="elk-stack" tabindex="-1">ELK Stack <a class="header-anchor" href="#elk-stack" aria-label="Permalink to &quot;ELK Stack&quot;">​</a></h1><p>The <strong>ELK stack</strong> is a powerful combination of three open-source tools: <strong>Elasticsearch</strong>, <strong>Logstash</strong>, and <strong>Kibana</strong>. It is widely used for log analysis, time-series data, and application monitoring. In our project, the ELK stack is utilized to monitor the logs of various services.</p><h2 id="components" tabindex="-1">Components <a class="header-anchor" href="#components" aria-label="Permalink to &quot;Components&quot;">​</a></h2><ul><li><strong>Logstash</strong>: Collects and parses logs.</li><li><strong>Elasticsearch</strong>: Indexes and stores the data.</li><li><strong>Kibana</strong>: Provides a UI to visualize the data, create dashboards, and much more.</li></ul><p><img src="'+e+`" alt="ELK Stack"></p><hr><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>The goal here is not to describe and explain how these applications works but to understand how it is used in the project. We&#39;ll still provide some basic information but don&#39;t hesitate to refer to the <a href="https://www.elastic.co/what-is/elk-stack" target="_blank" rel="noreferrer">ELK stack documentation</a> for more details.</p></div><h2 id="first-step" tabindex="-1">First step <a class="header-anchor" href="#first-step" aria-label="Permalink to &quot;First step&quot;">​</a></h2><p>First of all, we use a setup script to create certificates and keys for the ELK stack. It&#39;s necessary to use SSL and use the security features of the stack.</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">   image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">docker.elastic.co/elasticsearch/elasticsearch:\${STACK_VERSION}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">   volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">certs:/usr/share/elasticsearch/config/certs</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">   user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">   command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     bash -c &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       if [ x\${ELASTIC_PASSWORD} == x ]; then</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         echo &quot;Set the ELASTIC_PASSWORD environment variable in the .env file&quot;;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         exit 1;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       elif [ x\${KIBANA_PASSWORD} == x ]; then</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         echo &quot;Set the KIBANA_PASSWORD environment variable in the .env file&quot;;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         exit 1;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       fi;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       if [ ! -f config/certs/ca.zip ]; then</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         echo &quot;Creating CA&quot;;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         unzip config/certs/ca.zip -d config/certs;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       fi;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       if [ ! -f config/certs/certs.zip ]; then</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         echo &quot;Creating certs&quot;;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         echo -ne \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         &quot;instances:\\n&quot;\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         &quot;  - name: es\\n&quot;\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         &quot;    dns:\\n&quot;\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         &quot;      - es\\n&quot;\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         &quot;      - localhost\\n&quot;\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         &quot;    ip:\\n&quot;\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         &quot;      - 127.0.0.1\\n&quot;\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         &quot;  - name: kibana\\n&quot;\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         &quot;    dns:\\n&quot;\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         &quot;      - kibana\\n&quot;\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         &quot;      - localhost\\n&quot;\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         &quot;    ip:\\n&quot;\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         &quot;      - 127.0.0.1\\n&quot;\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         &gt; config/certs/instances.yml;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         unzip config/certs/certs.zip -d config/certs;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       fi;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       echo &quot;Setting file permissions&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       chown -R root:root config/certs;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       find . -type d -exec chmod 750 \\{\\} \\;;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       find . -type f -exec chmod 640 \\{\\} \\;;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       echo &quot;Waiting for Elasticsearch availability&quot;;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       until curl -s --cacert config/certs/ca/ca.crt https://es:9200 | grep -q &quot;missing authentication credentials&quot;; do sleep 30; done;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       echo &quot;Setting kibana_system password&quot;;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       until curl -s -X POST --cacert config/certs/ca/ca.crt -u &quot;elastic:\${ELASTIC_PASSWORD}&quot; -H &quot;Content-Type: application/json&quot; https://es:9200/_security/user/kibana_system/_password -d &quot;{\\&quot;password\\&quot;:\\&quot;\${KIBANA_PASSWORD}\\&quot;}&quot; | grep -q &quot;^{}&quot;; do sleep 10; done;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       echo &quot;All done!&quot;;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     &#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">   healthcheck</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;CMD-SHELL&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;[ -f config/certs/es/es.crt ]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1s</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    timeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">5s</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    retries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120</span></span></code></pre></div><p>You can find this script <a href="https://www.elastic.co/blog/getting-started-with-the-elastic-stack-and-docker-compose" target="_blank" rel="noreferrer">here</a> along with some additional information about the ELK stack setup. We found that healthchecks are useful to ensure that services wait for each other and start in the right order, so we deciced to keep them.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p><code>$STACK_VERSION</code> is the version of the ELK stack you want to use. You can find the available versions on the <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/es-release-notes.html" target="_blank" rel="noreferrer">Elastic website</a>. We recommend using the version you are most comfortable with, as it depends on the documentation you are following.</p></div>`,12)]))}const g=i(l,[["render",p]]);export{F as __pageData,g as default};
